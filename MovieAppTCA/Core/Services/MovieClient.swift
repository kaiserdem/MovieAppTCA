import Foundation
import Dependencies

/// –ö–ª—ñ—î–Ω—Ç –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ñ—ñ–ª—å–º–∞–º–∏ —á–µ—Ä–µ–∑ API
struct MovieClient {
    /// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤
    var getPopularMovies: @Sendable () async throws -> [Movie]
    
    /// –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ñ—ñ–ª—å–º –∑–∞ ID
    var getMovieDetails: @Sendable (Int) async throws -> MovieThemoviedb
}

/// –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è MovieClient —è–∫ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –¥–ª—è TCA
extension MovieClient: DependencyKey {
    static let liveValue = MovieClient(
        getPopularMovies: {
            let url = URL(string: "https://api.themoviedb.org/3/movie/popular?api_key=\(AppConstants.API.themoviedbKey)")!
            print("üåê –ó–∞–ø–∏—Ç –¥–æ API (—Ñ—ñ–ª—å–º–∏): \(url)")
            
            let (data, response) = try await URLSession.shared.data(from: url)
            
            if let httpResponse = response as? HTTPURLResponse {
                print("üì° –°—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: \(httpResponse.statusCode)")
            }
            
            let decoder = JSONDecoder()
            decoder.keyDecodingStrategy = .convertFromSnakeCase
            let movieResponse = try decoder.decode(MovieResponse.self, from: data)
            return movieResponse.results
        },
        getMovieDetails: { id in
            let url = URL(string: "https://api.themoviedb.org/3/movie/\(id)?api_key=\(AppConstants.API.themoviedbKey)")!
            print("üåê –ó–∞–ø–∏—Ç –¥–æ API (–¥–µ—Ç–∞–ª—ñ —Ñ—ñ–ª—å–º—É): \(url)")
            
            let (data, response) = try await URLSession.shared.data(from: url)
            
            if let httpResponse = response as? HTTPURLResponse {
                print("üì° –°—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: \(httpResponse.statusCode)")
            }
            
            let decoder = JSONDecoder()
            decoder.keyDecodingStrategy = .convertFromSnakeCase
            return try decoder.decode(MovieThemoviedb.self, from: data)
        }
    )
}

/// –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ MovieClient —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π TCA
extension DependencyValues {
    var movieClient: MovieClient {
        get { self[MovieClient.self] }
        set { self[MovieClient.self] = newValue }
    }
}

/// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ API –¥–ª—è —Å–ø–∏—Å–∫—É —Ñ—ñ–ª—å–º—ñ–≤
struct MovieResponse: Codable {
    let results: [Movie]
} 